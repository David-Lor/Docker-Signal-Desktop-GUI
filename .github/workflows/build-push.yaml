name: Build & Push
on:
  push:
    branches:
      - main
      - develop

  workflow_dispatch:
    inputs:
      tag_version:
        description: "Tag-Version to upload the image"
        required: true

jobs:
  build-push:
    name: Build & Push
    runs-on: ubuntu-latest
    steps:
      # Setup
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      # Set Docker image tag
      - name: Docker image tag version (on main branch push) to file
        if: github.ref == 'refs/heads/main'
        run: "echo latest > /tmp/docker_tag_version.txt"
      - name: Docker image tag version (on develop branch push) to file
        if: github.ref == 'refs/heads/develop'
        run: "echo dev > /tmp/docker_tag_version.txt"
      - name: Docker image tag version (on workflow dispatch) to file
        if: github.event.inputs.tag_version
        run: "echo ${{ github.event.inputs.tag_version }} > /tmp/docker_tag_version.txt"
      - name: Read extracted image tag version from file
        id: get_docker_tag_version_from_file
        uses: juliangruber/read-file-action@v1
        with:
          path: "/tmp/docker_tag_version.txt"
      - name: Set image tag version to variable
        id: get_image_tag_version
        run: echo ::set-output name=VERSION::$(echo ${{ steps.get_docker_tag_version_from_file.outputs.content }})
      - name: Validate image tag version
        id: validate_image_tag_version
        run: "test ${{ steps.get_image_tag_version.outputs.VERSION }} || exit 1"

      # Docker login
      - name: Login to DockerHub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      # Build & Push
      - name: Set image tag
        if: success()
        id: set_image_tag
        run: |-
          echo ::set-output name=TAG::$(echo "davidlor/signal-desktop:${{ steps.get_docker_tag_version_from_file.outputs.content }}")
      - name: Build
        if: success()
        run: make build IMAGE_TAG=${{ steps.set_image_tag.outputs.TAG }}
      - name: Push
        if: success()
        run: docker push ${{ steps.set_image_tag.outputs.TAG }}
